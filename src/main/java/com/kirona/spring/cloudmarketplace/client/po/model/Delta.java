/*
 * Purchase Orders API
 * REST API for purchase orders
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kirona.spring.cloudmarketplace.client.po.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kirona.spring.cloudmarketplace.client.po.model.PurchaseOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Delta
 */
@JsonPropertyOrder({
  Delta.JSON_PROPERTY_DATA,
  Delta.JSON_PROPERTY_EVENT_TYPE,
  Delta.JSON_PROPERTY_ID,
  Delta.JSON_PROPERTY_ORGANISATION_ID,
  Delta.JSON_PROPERTY_PURCHASE_ORDER_ID,
  Delta.JSON_PROPERTY_TIMESTAMP
})
@JsonTypeName("Delta")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-03-19T13:44:41.473Z[Europe/London]")
public class Delta {
  public static final String JSON_PROPERTY_DATA = "data";
  private PurchaseOrder data;

  /**
   * Gets or Sets eventType
   */
  public enum EventTypeEnum {
    ORDER_CANCELLED("ORDER_CANCELLED"),
    
    ORDER_CREATED("ORDER_CREATED"),
    
    ORDER_APPROVED("ORDER_APPROVED"),
    
    ORDER_REJECTED("ORDER_REJECTED"),
    
    GOODS_RECEIPT_ALERT("GOODS_RECEIPT_ALERT"),
    
    GOODS_RECEIPT("GOODS_RECEIPT"),
    
    CANCEL_QUANTITY("CANCEL_QUANTITY"),
    
    ORDER_AMENDED("ORDER_AMENDED");

    private String value;

    EventTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EventTypeEnum fromValue(String value) {
      for (EventTypeEnum b : EventTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EVENT_TYPE = "eventType";
  private EventTypeEnum eventType;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_ORGANISATION_ID = "organisationId";
  private Long organisationId;

  public static final String JSON_PROPERTY_PURCHASE_ORDER_ID = "purchaseOrderId";
  private Long purchaseOrderId;

  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
  private OffsetDateTime timestamp;


  public Delta data(PurchaseOrder data) {
    
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PurchaseOrder getData() {
    return data;
  }


  public void setData(PurchaseOrder data) {
    this.data = data;
  }


  public Delta eventType(EventTypeEnum eventType) {
    
    this.eventType = eventType;
    return this;
  }

   /**
   * Get eventType
   * @return eventType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EVENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EventTypeEnum getEventType() {
    return eventType;
  }


  public void setEventType(EventTypeEnum eventType) {
    this.eventType = eventType;
  }


  public Delta id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Delta organisationId(Long organisationId) {
    
    this.organisationId = organisationId;
    return this;
  }

   /**
   * Get organisationId
   * @return organisationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ORGANISATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getOrganisationId() {
    return organisationId;
  }


  public void setOrganisationId(Long organisationId) {
    this.organisationId = organisationId;
  }


  public Delta purchaseOrderId(Long purchaseOrderId) {
    
    this.purchaseOrderId = purchaseOrderId;
    return this;
  }

   /**
   * Get purchaseOrderId
   * @return purchaseOrderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PURCHASE_ORDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getPurchaseOrderId() {
    return purchaseOrderId;
  }


  public void setPurchaseOrderId(Long purchaseOrderId) {
    this.purchaseOrderId = purchaseOrderId;
  }


  public Delta timestamp(OffsetDateTime timestamp) {
    
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getTimestamp() {
    return timestamp;
  }


  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Delta delta = (Delta) o;
    return Objects.equals(this.data, delta.data) &&
        Objects.equals(this.eventType, delta.eventType) &&
        Objects.equals(this.id, delta.id) &&
        Objects.equals(this.organisationId, delta.organisationId) &&
        Objects.equals(this.purchaseOrderId, delta.purchaseOrderId) &&
        Objects.equals(this.timestamp, delta.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, eventType, id, organisationId, purchaseOrderId, timestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Delta {\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    organisationId: ").append(toIndentedString(organisationId)).append("\n");
    sb.append("    purchaseOrderId: ").append(toIndentedString(purchaseOrderId)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

